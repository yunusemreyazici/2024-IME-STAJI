{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../Modules/ServerTypes/MovieDB/GenreColumns.ts", "../../../Modules/ServerTypes/MovieDB/GenreRow.ts", "../../../Modules/ServerTypes/MovieDB/GenreService.ts", "../../../Modules/MovieDB/Movie/GenreListFormatter.ts", "../../../Modules/ServerTypes/MovieDB/MovieColumns.ts", "../../../Modules/ServerTypes/MovieDB/MovieKind.ts", "../../../Modules/ServerTypes/MovieDB/MovieRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieService.ts", "../../../Modules/ServerTypes/MovieDB/PersonColumns.ts", "../../../Modules/ServerTypes/MovieDB/Gender.ts", "../../../Modules/ServerTypes/MovieDB/PersonRow.ts", "../../../Modules/ServerTypes/MovieDB/PersonService.ts", "../../../Modules/ServerTypes/MovieDB/GenreForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastColumns.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastService.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditor.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditDialog.ts", "../../../Modules/ServerTypes/MovieDB/MovieForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresService.ts", "../../../Modules/MovieDB/Person/PersonMovieGrid.ts", "../../../Modules/ServerTypes/MovieDB/PersonForm.ts", "../../../Modules/ServerTypes/MovieDB/PersonMovieColumns.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"./GenreRow\";\r\n\r\nexport interface GenreColumns {\r\n    GenreId: Column<GenreRow>;\r\n    Name: Column<GenreRow>;\r\n}\r\n\r\nexport class GenreColumns extends ColumnsBase<GenreRow> {\r\n    static readonly columnsKey = 'MovieDB.Genre';\r\n    static readonly Fields = fieldsProxy<GenreColumns>();\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface GenreRow {\r\n    GenreId?: number;\r\n    Name?: string;\r\n}\r\n\r\nexport abstract class GenreRow {\r\n    static readonly idProperty = 'GenreId';\r\n    static readonly nameProperty = 'Name';\r\n    static readonly localTextPrefix = 'MovieDB.Genre';\r\n    static readonly lookupKey = 'MovieDB.Genre';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<GenreRow>('MovieDB.Genre') }\r\n    static async getLookupAsync() { return getLookupAsync<GenreRow>('MovieDB.Genre') }\r\n\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<GenreRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { GenreRow } from \"./GenreRow\";\r\n\r\nexport namespace GenreService {\r\n    export const baseUrl = 'MovieDB/Genre';\r\n\r\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Genre/Create\",\r\n        Update: \"MovieDB/Genre/Update\",\r\n        Delete: \"MovieDB/Genre/Delete\",\r\n        Retrieve: \"MovieDB/Genre/Retrieve\",\r\n        List: \"MovieDB/Genre/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>GenreService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"@/ServerTypes/MovieDB/GenreRow\";\r\n\r\nlet lookup: Lookup<GenreRow>;\r\nlet promise: Promise<Lookup<GenreRow>>;\r\n\r\n@Decorators.registerFormatter('MovieTutorial.GenreListFormatter')\r\nexport class GenreListFormatter implements Formatter {\r\n\r\n    format(ctx: FormatterContext) {\r\n\r\n        let idList = ctx.value as number[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        let byId = lookup?.itemById;\r\n        if (byId) {\r\n            return idList.map(x => {\r\n                var z = byId[x];\r\n                return ctx.escape(z == null ? x : z.Name);\r\n            }).join(\", \");\r\n        }\r\n\r\n        promise ??= GenreRow.getLookupAsync().then(l => {\r\n            lookup = l;\r\n            try {\r\n                ctx.grid?.invalidate();\r\n            }\r\n            finally {\r\n                lookup = null;\r\n                promise = null;\r\n            }\r\n        }).catch(() => promise = null);\r\n\r\n        return `<i class=\"fa fa-spinner\"></i>`;\r\n    }\r\n}\r\n", "\uFEFFimport { GenreListFormatter } from \"@/MovieDB/Movie/GenreListFormatter\";\r\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { MovieKind } from \"./MovieKind\";\r\nimport { MovieRow } from \"./MovieRow\";\r\n\r\nexport interface MovieColumns {\r\n    MovieId: Column<MovieRow>;\r\n    Title: Column<MovieRow>;\r\n    Description: Column<MovieRow>;\r\n    Storyline: Column<MovieRow>;\r\n    Year: Column<MovieRow>;\r\n    ReleaseDate: Column<MovieRow>;\r\n    Runtime: Column<MovieRow>;\r\n    Kind: Column<MovieRow>;\r\n    GenreList: Column<MovieRow>;\r\n}\r\n\r\nexport class MovieColumns extends ColumnsBase<MovieRow> {\r\n    static readonly columnsKey = 'MovieDB.Movie';\r\n    static readonly Fields = fieldsProxy<MovieColumns>();\r\n}\r\n\r\n[MovieKind, GenreListFormatter]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum MovieKind {\r\n    Film = 1,\r\n    TvSeries = 2,\r\n    MiniSeries = 3\r\n}\r\nDecorators.registerEnumType(MovieKind, 'MovieTutorial.MovieDB.MovieKind', 'MovieDB.MovieKind');", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\nimport { MovieKind } from \"./MovieKind\";\r\n\r\nexport interface MovieRow {\r\n    MovieId?: number;\r\n    Title?: string;\r\n    Description?: string;\r\n    Storyline?: string;\r\n    Year?: number;\r\n    ReleaseDate?: string;\r\n    Runtime?: number;\r\n    Kind?: MovieKind;\r\n    GenreList?: number[];\r\n    CastList?: MovieCastRow[];\r\n    PrimaryImages?: string;\r\n    GalleryImages?: string;\r\n}\r\n\r\nexport abstract class MovieRow {\r\n    static readonly idProperty = 'MovieId';\r\n    static readonly nameProperty = 'Title';\r\n    static readonly localTextPrefix = 'MovieDB.Movie';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { MovieListRequest } from \"./MovieListRequest\";\r\nimport { MovieRow } from \"./MovieRow\";\r\n\r\nexport namespace MovieService {\r\n    export const baseUrl = 'MovieDB/Movie';\r\n\r\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: MovieListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Movie/Create\",\r\n        Update: \"MovieDB/Movie/Update\",\r\n        Delete: \"MovieDB/Movie/Delete\",\r\n        Retrieve: \"MovieDB/Movie/Retrieve\",\r\n        List: \"MovieDB/Movie/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { Gender } from \"./Gender\";\r\nimport { PersonRow } from \"./PersonRow\";\r\n\r\nexport interface PersonColumns {\r\n    PersonId: Column<PersonRow>;\r\n    FirstName: Column<PersonRow>;\r\n    LastName: Column<PersonRow>;\r\n    BirthDate: Column<PersonRow>;\r\n    BirthPlace: Column<PersonRow>;\r\n    Gender: Column<PersonRow>;\r\n    Height: Column<PersonRow>;\r\n}\r\n\r\nexport class PersonColumns extends ColumnsBase<PersonRow> {\r\n    static readonly columnsKey = 'MovieDB.Person';\r\n    static readonly Fields = fieldsProxy<PersonColumns>();\r\n}\r\n\r\n[Gender]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum Gender {\r\n    Male = 1,\r\n    Female = 2\r\n}\r\nDecorators.registerEnumType(Gender, 'MovieTutorial.MovieDB.Gender');", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Gender } from \"./Gender\";\r\n\r\nexport interface PersonRow {\r\n    PersonId?: number;\r\n    FirstName?: string;\r\n    LastName?: string;\r\n    BirthDate?: string;\r\n    BirthPlace?: string;\r\n    Height?: number;\r\n    FullName?: string;\r\n    Gender?: Gender;\r\n    PrimaryImage?: string;\r\n    GalleryImages?: string;\r\n}\r\n\r\nexport abstract class PersonRow {\r\n    static readonly idProperty = 'PersonId';\r\n    static readonly nameProperty = 'FullName';\r\n    static readonly localTextPrefix = 'MovieDB.Person';\r\n    static readonly lookupKey = 'MovieDB.Person';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<PersonRow>('MovieDB.Person') }\r\n    static async getLookupAsync() { return getLookupAsync<PersonRow>('MovieDB.Person') }\r\n\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<PersonRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { PersonRow } from \"./PersonRow\";\r\n\r\nexport namespace PersonService {\r\n    export const baseUrl = 'MovieDB/Person';\r\n\r\n    export declare function Create(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Person/Create\",\r\n        Update: \"MovieDB/Person/Update\",\r\n        Delete: \"MovieDB/Person/Delete\",\r\n        Retrieve: \"MovieDB/Person/Retrieve\",\r\n        List: \"MovieDB/Person/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>PersonService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface GenreForm {\r\n    Name: StringEditor;\r\n}\r\n\r\nexport class GenreForm extends PrefixedContext {\r\n    static readonly formKey = 'MovieDB.Genre';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!GenreForm.init)  {\r\n            GenreForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(GenreForm, [\r\n                'Name', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\n\r\nexport interface MovieCastColumns {\r\n    PersonFullName: Column<MovieCastRow>;\r\n    Character: Column<MovieCastRow>;\r\n}\r\n\r\nexport class MovieCastColumns extends ColumnsBase<MovieCastRow> {\r\n    static readonly columnsKey = 'MovieDB.MovieCast';\r\n    static readonly Fields = fieldsProxy<MovieCastColumns>();\r\n}", "\uFEFFimport { LookupEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface MovieCastForm {\r\n    PersonId: LookupEditor;\r\n    Character: StringEditor;\r\n}\r\n\r\nexport class MovieCastForm extends PrefixedContext {\r\n    static readonly formKey = 'MovieDB.MovieCast';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieCastForm.init)  {\r\n            MovieCastForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(MovieCastForm, [\r\n                'PersonId', w0,\r\n                'Character', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface MovieCastRow {\r\n    MovieCastId?: number;\r\n    MovieId?: number;\r\n    PersonId?: number;\r\n    Character?: string;\r\n    MovieTitle?: string;\r\n    PersonFirstName?: string;\r\n    PersonFullName?: string;\r\n}\r\n\r\nexport abstract class MovieCastRow {\r\n    static readonly idProperty = 'MovieCastId';\r\n    static readonly nameProperty = 'Character';\r\n    static readonly localTextPrefix = 'MovieDB.MovieCast';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieCastRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\n\r\nexport namespace MovieCastService {\r\n    export const baseUrl = 'MovieDB/MovieCast';\r\n\r\n    export declare function Create(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/MovieCast/Create\",\r\n        Update: \"MovieDB/MovieCast/Update\",\r\n        Delete: \"MovieDB/MovieCast/Delete\",\r\n        Retrieve: \"MovieDB/MovieCast/Retrieve\",\r\n        List: \"MovieDB/MovieCast/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieCastService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { MovieCastColumns, MovieCastRow, PersonRow } from \"@/ServerTypes/MovieDB\";\r\nimport { MovieCastEditDialog } from \"./MovieCastEditDialog\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.MovieCastEditor\")\r\nexport class MovieCastEditor extends GridEditorBase<MovieCastRow> {    protected getColumnsKey() { return MovieCastColumns.columnsKey }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n    protected getDialogType() { return MovieCastEditDialog; }\r\n\r\n    protected getAddButtonCaption() {\r\n        return \"Add\";\r\n\r\n}\r\n    protected validateEntity(row: MovieCastRow, id: number) {\r\n        if (!super.validateEntity(row, id))\r\n            return false;\r\n\r\n        var itemId = id ?? row[this.getIdProperty()];\r\n        PersonRow.getLookupAsync().then(x => {\r\n            var item = this.view?.getItemById(itemId);\r\n            if (item) {\r\n                item.PersonFullName = x.itemById[row.PersonId].FullName;\r\n                this.view.updateItem(itemId, item);\r\n            }\r\n        });\r\n\r\n        return true;\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\r\nimport { MovieCastForm, MovieCastRow } from \"@/ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerClass(\"MovieTutorial.MovieDB.MovieCastEditDialog\")\r\nexport class MovieCastEditDialog extends GridEditorDialog<MovieCastRow> {\r\n    protected getFormKey() { return MovieCastForm.formKey; }\r\n    protected getNameProperty() { return MovieCastRow.nameProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    protected form: MovieCastForm = new MovieCastForm(this.idPrefix);\r\n}", "\uFEFFimport { MovieCastEditor } from \"@/MovieDB/MovieCast/MovieCastEditor\";\r\nimport { TextAreaEditor, IntegerEditor, EnumEditor, LookupEditor, MultipleImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\nimport { MovieKind } from \"./MovieKind\";\r\n\r\nexport interface MovieForm {\r\n    Title: TextAreaEditor;\r\n    Description: TextAreaEditor;\r\n    CastList: MovieCastEditor;\r\n    Storyline: TextAreaEditor;\r\n    Year: IntegerEditor;\r\n    ReleaseDate: TextAreaEditor;\r\n    Runtime: IntegerEditor;\r\n    Kind: EnumEditor;\r\n    GenreList: LookupEditor;\r\n    PrimaryImages: MultipleImageUploadEditor;\r\n    GalleryImages: MultipleImageUploadEditor;\r\n}\r\n\r\nexport class MovieForm extends PrefixedContext {\r\n    static readonly formKey = 'MovieDB.Movie';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieForm.init)  {\r\n            MovieForm.init = true;\r\n\r\n            var w0 = TextAreaEditor;\r\n            var w1 = MovieCastEditor;\r\n            var w2 = IntegerEditor;\r\n            var w3 = EnumEditor;\r\n            var w4 = LookupEditor;\r\n            var w5 = MultipleImageUploadEditor;\r\n\r\n            initFormType(MovieForm, [\r\n                'Title', w0,\r\n                'Description', w0,\r\n                'CastList', w1,\r\n                'Storyline', w0,\r\n                'Year', w2,\r\n                'ReleaseDate', w0,\r\n                'Runtime', w2,\r\n                'Kind', w3,\r\n                'GenreList', w4,\r\n                'PrimaryImages', w5,\r\n                'GalleryImages', w5\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[MovieKind]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface MovieGenresRow {\r\n    MovieGenreId?: number;\r\n    MovieId?: number;\r\n    GenreId?: number;\r\n    MovieTitle?: string;\r\n    GenreName?: string;\r\n}\r\n\r\nexport abstract class MovieGenresRow {\r\n    static readonly idProperty = 'MovieGenreId';\r\n    static readonly localTextPrefix = 'MovieDB.MovieGenres';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieGenresRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { MovieGenresRow } from \"./MovieGenresRow\";\r\n\r\nexport namespace MovieGenresService {\r\n    export const baseUrl = 'MovieDB/MovieGenres';\r\n\r\n    export declare function Create(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/MovieGenres/Create\",\r\n        Update: \"MovieDB/MovieGenres/Update\",\r\n        Delete: \"MovieDB/MovieGenres/Delete\",\r\n        Retrieve: \"MovieDB/MovieGenres/Retrieve\",\r\n        List: \"MovieDB/MovieGenres/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieGenresService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\r\nimport {MovieCastRow, MovieCastService, PersonMovieColumns} from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.PersonMovieGrid\")\r\nexport class PersonMovieGrid extends EntityGrid<MovieCastRow, any>\r\n{\r\n    protected getColumnsKey() { return PersonMovieColumns.columnsKey; }\r\n    protected getRowDefinition() { return MovieCastRow; }\r\n    protected getService() { return MovieCastService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getButtons() {\r\n        return null;\r\n    }\r\n\r\n    protected getInitialTitle() {\r\n        return null;\r\n    }\r\n\r\n    protected usePager() {\r\n        return false;\r\n    }\r\n\r\n    protected getGridCanLoad() {\r\n        return this.personId != null;\r\n    }\r\n\r\n    private _personId: number;\r\n\r\n    get personId() {\r\n        return this._personId;\r\n    }\r\n\r\n    set personId(value: number) {\r\n        if (this._personId != value) {\r\n            this._personId = value;\r\n            this.setEquality(MovieCastRow.Fields.PersonId, value);\r\n            this.refresh();\r\n        }\r\n    }\r\n}", "\uFEFFimport { PersonMovieGrid } from \"@/MovieDB/Person/PersonMovieGrid\";\r\nimport { StringEditor, DateEditor, EnumEditor, IntegerEditor, ImageUploadEditor, MultipleImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\nimport { Gender } from \"./Gender\";\r\n\r\nexport interface PersonForm {\r\n    FirstName: StringEditor;\r\n    LastName: StringEditor;\r\n    BirthDate: DateEditor;\r\n    BirthPlace: StringEditor;\r\n    Gender: EnumEditor;\r\n    Height: IntegerEditor;\r\n    MoviesGris: PersonMovieGrid;\r\n    PrimaryImage: ImageUploadEditor;\r\n    GalleryImages: MultipleImageUploadEditor;\r\n}\r\n\r\nexport class PersonForm extends PrefixedContext {\r\n    static readonly formKey = 'MovieDB.Person';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!PersonForm.init)  {\r\n            PersonForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = DateEditor;\r\n            var w2 = EnumEditor;\r\n            var w3 = IntegerEditor;\r\n            var w4 = PersonMovieGrid;\r\n            var w5 = ImageUploadEditor;\r\n            var w6 = MultipleImageUploadEditor;\r\n\r\n            initFormType(PersonForm, [\r\n                'FirstName', w0,\r\n                'LastName', w0,\r\n                'BirthDate', w1,\r\n                'BirthPlace', w0,\r\n                'Gender', w2,\r\n                'Height', w3,\r\n                'MoviesGris', w4,\r\n                'PrimaryImage', w5,\r\n                'GalleryImages', w6\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[Gender]; // referenced types", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\n\r\nexport interface PersonMovieColumns {\r\n    MovieTitle: Column<MovieCastRow>;\r\n    Character: Column<MovieCastRow>;\r\n}\r\n\r\nexport class PersonMovieColumns extends ColumnsBase<MovieCastRow> {\r\n    static readonly columnsKey = 'MovieTutorial.MovieDB.Columns.PersonMovieColumns';\r\n    static readonly Fields = fieldsProxy<PersonMovieColumns>();\r\n}"],
  "mappings": "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",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "import_corelib", "_GenreColumns", "__name", "GenreColumns", "import_corelib", "_GenreRow", "__async", "__name", "GenreRow", "import_corelib", "GenreService", "x", "r", "s", "o", "import_corelib", "lookup", "promise", "GenreListFormatter", "ctx", "idList", "byId", "x", "z", "GenreRow", "l", "_a", "__name", "__decorateClass", "import_corelib", "import_corelib", "MovieKind", "_MovieColumns", "__name", "MovieColumns", "import_corelib", "_MovieRow", "__name", "MovieRow", "import_corelib", "MovieService", "x", "r", "s", "o", "import_corelib", "import_corelib", "Gender", "_PersonColumns", "__name", "PersonColumns", "import_corelib", "_PersonRow", "__async", "__name", "PersonRow", "import_corelib", "PersonService", "x", "r", "s", "o", "import_corelib", "_GenreForm", "prefix", "w0", "__name", "GenreForm", "import_corelib", "_MovieCastColumns", "__name", "MovieCastColumns", "import_corelib", "_MovieCastForm", "prefix", "w0", "w1", "__name", "MovieCastForm", "import_corelib", "_MovieCastRow", "__name", "MovieCastRow", "import_corelib", "MovieCastService", "x", "r", "s", "o", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "MovieCastEditDialog", "MovieCastForm", "MovieCastRow", "__name", "__decorateClass", "MovieCastEditor", "MovieCastColumns", "MovieCastRow", "container", "MovieCastEditDialog", "row", "id", "itemId", "PersonRow", "x", "_a", "item", "__name", "__decorateClass", "import_corelib", "_MovieForm", "prefix", "w0", "w1", "MovieCastEditor", "w2", "w3", "w4", "w5", "__name", "MovieForm", "import_corelib", "_MovieGenresRow", "__name", "MovieGenresRow", "import_corelib", "MovieGenresService", "x", "r", "s", "o", "import_corelib", "PersonMovieGrid", "container", "PersonMovieColumns", "MovieCastRow", "MovieCastService", "value", "__name", "__decorateClass", "import_corelib", "_PersonForm", "prefix", "w0", "w1", "w2", "w3", "w4", "PersonMovieGrid", "w5", "w6", "__name", "PersonForm", "import_corelib", "_PersonMovieColumns", "__name", "PersonMovieColumns"]
}
